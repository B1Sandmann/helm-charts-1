mariadb:
  name: datahubdb
  enabled: true
  dbName: datahub
  initdb_configmap: datahub-initdb
  ronly_user: ronly
  ronly_password: DEFINED-IN-REGION
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  metrics:
    enabled: true
  priority_class: ""
  persistence_claim:
    name: datahubdb-pvclaim
    enabled: true
    autoprovision:
      enabled: true
  extraConfigFiles:
      datahubdb.cnf: |+
        [mysqld]
        relay_log = mysql-relay-bin
  restore:
    enabled: false
    schedule: 10 1 * * *
    image:
      repo: keppel.eu-de-1.cloud.sap/ccloud/go-maria-restore
      tag: DEFINED-IN-PIPELINE
    swift_token: DEFININED-IN-SECRETS
    additional_sql_file: "/config/openstack_view.sql"
    backup_dir: "/backups/"
    read_access: null
    debug:
      enabled: false
  alerts:
    enabled: false
    tier: "infra"
    prometheus: "infra-collector"

ingress:
  disco: true

backup_v2:
  enabled: false
  metrics:
    enabled: true
  alerts:
    enabled: false
    prometheus: "infra-collector"
    tier: "infra"

yellowPages:
  enabled: false
  metrics:
    enabled: false
    path: "/metrics"
    port: "9100"
    prometheus: infra-collector
  image: "datahub-yellowpages"
  imageVersion: DEFINED-IN-PIPELINE
  requiredDatabases:
    - "keystone"
    - "nova"
    - "nova_cell0"
    - "neutron"
    - "glance"
  requiredTables:
    - "datahub.cc_billing"
  views_enabled: false
  views:
    - name: openstack_ips
      definition: "create or replace table datahub.openstack_ips
         ( floating_ip_id varchar(36) NOT NULL,
           primary key ( floating_ip_id ) )
       as
           select  f.floating_ip_address AS floating_ip_address,
                 f.id as floating_ip_id,
                 port.id AS port,p.name AS project,
                 p.id AS project_id,
                 d.name AS domain,
                 n.name AS network,
                 n.id AS network_id,
                 s.name AS subnet,
                 s.id AS subnet_id,
                 sn.name AS subnetpool,
                 sn.id AS subnetpool_id,
                 r.id AS router_id,
                 r.name AS router,
                 fixed_port.device_id as instance_id,
                 fixed_port.device_owner as owner,
                 i.display_name as instance_name,
                 i.host as host,
                 i.availability_zone as availability_zone, 
                 b.cost_object_name as cost_object,
                 b.cost_object_type as cost_object_type,
                 b.primary_contact_user_id as primary_contact,
                 b.primary_contact_email as primary_contact_email,
                 b.business_criticality as business_criticality,
                 b.number_of_endusers as number_of_endusers
                 from neutron.floatingips f
                     left join keystone.project p on f.project_id = p.id
                     left join keystone.project d on p.domain_id = d.id
                     left join neutron.ipallocations ip on f.floating_ip_address = ip.ip_address
                     left join neutron.networks n on f.floating_network_id = n.id
                     left join neutron.subnets s on ip.subnet_id = s.id
                     left join neutron.subnetpools sn on s.subnetpool_id = sn.id
                     left join neutron.ports port on ip.port_id = port.id
                     left join neutron.ports fixed_port on f.fixed_port_id = fixed_port.id
                     left join neutron.routers r on r.id = f.router_id
                     left join datahub.nova_instances i on i.uuid = fixed_port.device_id
                     left join datahub.cc_billing b on b.project_id = f.project_id;"
    - name: glance_images
      definition: "create or replace table datahub.glance_images
                  ( id varchar(36) NOT NULL,
                    primary key ( id, instance_name, instance_id, created_at ) )
                    as
                    select  g.id AS id,
                          g.name AS name,
                          g.visibility AS visibility,
                          n.display_name as instance_name,
                          n.uuid as instance_id,
                          p.id as project_id,
                          p.name as project_name,
                          d.id as domain_id,
                          d.name as domain_name,
                          n.created_at as created_at,
                          n.image_ref as image_ref
                          from glance.images g
                              left join datahub.nova_instances n on n.image_ref = g.id
                              left join keystone.project p on p.id = n.project_id
                              left join keystone.project d on d.id = p.domain_id where n.uuid is not null;"
    - name: openstack_ips2
      definition: "create or replace view datahub.openstack_ips2
                    as select
                          ni.ip_address as ip_address,
                          nf.id as floating_ip_id,
                          kp.id as project_id,
                          kp.name as project_name,
                          kd.id as domain_id,
                          kd.name as domain_name,
                          nn.name AS network,
                          nn.id AS network_id,
                          ns.name AS subnet,
                          ns.id AS subnet_id,
                          nsp.name AS subnetpool,
                          nsp.id AS subnetpool_id,
                          nr.id as router_id,
                          nr.name as router_name,
                          np.id as port_id, 
                          np.name as port_name,
                          nfp.device_id as instance_id,
                          nfp.device_owner as owner,
                          ni.display_name as instance_name,
                          ni.host as host,
                          ni.availability_zone as availability_zone,
                          b.cost_object_name as cost_object,
                          b.cost_object_type as cost_object_type,
                          b.primary_contact_user_id as primary_contact,
                          b.primary_contact_email as primary_contact_email,
                          b.business_criticality as business_criticality,
                          b.number_of_endusers as number_of_endusers
                          from neutron.ipallocations as ni
                          inner join neutron.ports np on np.id = ni.port_id and np.device_owner = 'network:floatingip'
                          left join neutron.floatingips nf on nf.id = np.device_id
                          inner join neutron.routers nr on nr.id = nf.router_id
                          inner join keystone.project kp on kp.id = nf.project_id
                          inner join keystone.project kd on kd.id = kp.domain_id
                          left join neutron.networks nn on nn.id = nf.floating_network_id
                          left join neutron.subnets ns on ns.id = ni.subnet_id
                          left join neutron.subnetpools nsp on nsp.id = ns.subnetpool_id
                          left join neutron.ports nfp on nfp.id = nf.fixed_port_id
                          left join datahub.nova_instances ni on ni.uuid = nfp.device_id
                          left join datahub.cc_billing b on b.project_id = nf.project_id
                    union
                    select
                          ni.ip_address as ip_address,
                          nf.id as floating_ip_id,
                          kp.id as project_id,
                          kp.name as project_name,
                          kd.id as domain_id,
                          kd.name as domain_name,
                          nn.name AS network,
                          nn.id AS network_id,
                          ns.name AS subnet,
                          ns.id AS subnet_id,
                          nsp.name AS subnetpool,
                          nsp.id AS subnetpool_id,
                          nr.id as router_id,
                          nr.name as router_name,
                          np.id as port_id, 
                          np.name as port_name,
                          nfp.device_id as instance_id,
                          nfp.device_owner as owner,
                          ni.display_name as instance_name,
                          ni.host as host,
                          ni.availability_zone as availability_zone,
                          b.cost_object_name as cost_object,
                          b.cost_object_type as cost_object_type,
                          b.primary_contact_user_id as primary_contact,
                          b.primary_contact_email as primary_contact_email,
                          b.business_criticality as business_criticality,
                          b.number_of_endusers as number_of_endusers
                          from neutron.ipallocations as ni
                          inner join neutron.ports as np on np.id = ni.port_id and np.device_owner = 'network:router_gateway'
                          left join neutron.floatingips nf on nf.id = ni.ip_address
                          inner join neutron.routers nr on nr.id = np.device_id
                          inner join keystone.project kp on kp.id = nr.project_id
                          inner join keystone.project kd on kd.id = kp.domain_id
                          left join neutron.networks nn on nn.id = ni.network_id
                          left join neutron.subnets ns on ns.id = ni.subnet_id
                          left join neutron.subnetpools nsp on nsp.id = ns.subnetpool_id
                          left join neutron.ports nfp on nfp.id = nf.fixed_port_id
                          left join datahub.nova_instances ni on ni.uuid = nfp.device_id
                          left join datahub.cc_billing b on b.project_id = nr.project_id;"