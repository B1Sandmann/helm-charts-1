kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: designate-api
  labels:
    system: openstack
    application: designate
    type: api
    component: api
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: designate-api
  template:
    metadata:
      labels:
        app: designate-api
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
    spec:
{{- if and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "7") }}
{{ tuple . "designate" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
{{- end }}
      initContainers:
      - name: kubernetes-entrypoint
        image: {{required ".Values.global.image_repository is missing" .Values.global.image_repository}}/{{ required ".Values.global.image_namespace missing" .Values.global.image_namespace}}/loci-designate:{{required ".Values.image_version_designate_api is missing" .Values.image_version_designate_api}}
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/kubernetes-entrypoint
        env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: {{ .Release.Name }}-migration
            - name: DEPENDENCY_SERVICE
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq,{{ .Release.Name }}-memcached"
            - name: COMMAND
              value: "true"
      containers:
        - name: designate-api
          image: {{required ".Values.global.image_repository is missing" .Values.global.image_repository}}/{{ required ".Values.global.image_namespace missing" .Values.global.image_namespace}}/loci-designate:{{required ".Values.image_version_designate_api is missing" .Values.image_version_designate_api}}
          imagePullPolicy: IfNotPresent
          command:
            - /container.init/designate-api.sh
            - start
          resources:
             requests:
               memory: "256Mi"
               cpu: "100m"
             limits:
               memory: "2048Mi"
               cpu: "2000m"
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "designate-migration"
            - name: DEPENDENCY_SERVICE
              value: "designate-mariadb,{{ .Release.Name }}-rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: designate.DSN.python
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.designate_api_port_internal}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          ports:
            - name: designate-api
              containerPort: {{.Values.global.designate_api_port_internal}}
          lifecycle:
            preStop:
              exec:
                command:
                  - /container.init/designate-api.sh
                  - stop
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
            - name: wsgi-designate
              mountPath: /var/www/cgi-bin/designate
              readOnly: true
            - name: designate-apache
              mountPath: /etc/apache2/conf-enabled/wsgi-designate.conf
              subPath: wsgi-designate.conf
        - name: statsd
          image: prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.global.designate_metrics_port}}
          volumeMounts:
            - name: designate-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
      volumes:
        - name: designate-etc
          configMap:
            name: designate-etc
        - name: designate-apache
          configMap:
            name: designate-apache
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
