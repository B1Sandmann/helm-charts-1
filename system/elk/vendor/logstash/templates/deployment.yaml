apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-external
  namespace: elk
  labels:
    component: logstash-external
spec:
  selector:
    matchLabels:
      component: logstash-external
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        component: logstash-external
      annotations:
        checksum/configmap.yaml: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: elk-etc
          configMap:
            name: logstash-etc
{{- if .Values.tls.enabled }}	
        - name: tls-secret
          secret:
            secretName: tls-logstash
{{- end}}
      containers:
        - name: logstash-external
          image: {{.Values.global.registry}}/elk-logstash:{{.Values.image_version}}
          imagePullPolicy: IfNotPresent
          ports:
            - name: netflow
              containerPort: {{.Values.input_netflow_port}}
              protocol: UDP
            - name: syslogudp
              containerPort: {{.Values.input_syslog_port}}
              protocol: UDP
            - name: syslogtcp
              containerPort: {{.Values.input_syslog_port}}
              protocol: TCP
            - name: bigiplogsudp
              containerPort: {{.Values.input_bigiplogs_port}}
              protocol: UDP
            - name: alertmanagertcp
              containerPort: {{.Values.input_alertmanager_port}}
              protocol: TCP
            - name: deploymentstcp
              containerPort: {{.Values.input_deployments_port}}
              protocol: TCP
{{- if .Values.tls.enabled }}
            - name: https
              containerPort: {{.Values.input_http_port}}
              protocol: TCP
{{- end}}
          command: ["dumb-init","/bin/bash","/elk-etc/start.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: elk-etc
              mountPath: /elk-etc
{{- if .Values.tls.enabled }}
            - mountPath: /tls-secret
              name: tls-secret
{{- end}}
#          livenessProbe:
#            exec:
#              command:
#                - /bin/false
#            initialDelaySeconds: 60
#            periodSeconds: 3600 # Restart once per hour in case of rabbitmq shutdown
